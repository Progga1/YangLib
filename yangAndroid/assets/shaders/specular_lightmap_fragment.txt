#ANDROID precision mediump float;
uniform sampler2D texSampler;
uniform sampler2D groundLayerSampler;
uniform sampler2D highLayerSampler;
uniform sampler2D topLayerSampler;
uniform sampler2D lightSampler;
uniform vec4 ambientColor;
uniform vec4 lightDir;

varying vec4 texWeights;
varying vec2 texCoord;
varying vec4 blendWeights;
varying vec4 worldPos;
varying vec4 camVector;
varying vec4 normal;

void main()
{
	vec4 texCl = texture2D(texSampler, texCoord);
	vec4 light = texture2D(lightSampler, texCoord)*1.3;
	vec4 camDir = normalize(camVector);
	vec4 halfVector = reflect(camDir,normalize(normal));
	float specular = min(pow(max(0.0,dot(halfVector,lightDir)),32.0) + pow(max(0.0,dot(halfVector,lightDir)),2.0)*0.5, 1.0);
	vec4 specVec = vec4(specular,specular,specular,0.0);
	/*texCl = vec4(camDir.x,camVector.y,camVector.z,1.0)*0.5+0.5;*/
	gl_FragColor = (texCl * light + specular*light) * ambientColor;
}